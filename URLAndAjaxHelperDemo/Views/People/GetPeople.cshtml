@using URLAndAjaxHelperDemo.Models
@model string

@{
    ViewBag.Title = "GetPeople";
    AjaxOptions ajaxOpts = new AjaxOptions {
        UpdateTargetId = "tableBody",
        Url = Url.Action("GetPeopleData"),
        LoadingElementId = "loading",
        LoadingElementDuration = 1000,
        Confirm = "Do you wish to request new data?"
    };
}

<script type="text/javascript">
    function OnBegin()
    {
        alert("This is the OnBegin Callback");
    }

    function OnSuccess(data)
    {
        alert("This is the OnSuccessCallback: " + data);
    }

    function OnFailure(request, error)
    {
        alert("This is the OnFailure Callback:" + error);
    }

    function OnComplete(request, error)
    {
        alert("This is the OnComplete Callback: " + status);
    }
</script>

<h2>Get People</h2>

<div id="loading" class="load" style="display:none">
    <p>Loading Data...</p>
</div>

<table>
    <thead><tr><th>First</th><th>Last</th><th>Role</th></tr></thead>
    <tbody id="tableBody">
        @Html.Action("GetPeopleData", new { selectedRole = Model })
    </tbody>
</table>

@using (Ajax.BeginForm(ajaxOpts))
{
    <div>
        @Html.DropDownList("selectedRole", new SelectList(
            new[] { "All" }.Concat(Enum.GetNames(typeof(Role)))))
        <button type="submit">Submit</button>
    </div>
}

<div>
    @foreach(string role in Enum.GetNames(typeof(Role)))
    {
        <div class="ajaxLink">
            @Ajax.ActionLink(role, "GetPeople", 
            new { selectedRole = role },
              new AjaxOptions { 
                  UpdateTargetId = "tableBody", 
                  Url = Url.Action("GetPeopleData", new { selectedRole = role }),
                  OnBegin = "OnBegin",
                  OnSuccess = "OnSuccess",
                  OnFailure = "OnFailure",
                  OnComplete = "OnComplete"
              })
        </div>
    }
</div>